// Command to generate grpc  
// $ protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative .\auth.proto

syntax = "proto3";

package auth;

option go_package = "github.com/pseudoincorrect/Bariot/auth/rpc/auth";


service Auth {
  rpc GetAdminToken(GetAdminTokenRequest) returns (GetAdminTokenResponse) {}
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse) {}
  // rpc AuthorizeUser(AuthoriseUserRequest) returns (AuthoriseUserResponse) {}
  // rpc AuthorizeThing(AuthoriseUserRequest) returns (AuthoriseThingResponse) {}
  // rpc createTokenUser(CreateTokenUserRequest) returns (CreateTokenUserResponse) {}
}

message GetAdminTokenRequest {
}

message GetAdminTokenResponse{
  string jwt = 1;
}

message ValidateTokenRequest {
  string jwt = 1;
}

message ValidateTokenResponse {
  bool valid = 1;
}

// message AuthorizeUserRequest{
//   string jwt = 1;
// }

// message AuthorizeUserResponse {}

// message AuthorizeUserRequest {
//   string jwt = 1;
// }

// message AuthorizeThingResponse {}

// message CreateTokenUserRequest {
//   string jwt = 1;
//   string userPassword = 2;
// }

// message CreateTokenUserResponse {}
