version: "3"

volumes:
  bariot_things_db_data:
  bariot_users_db_data:
  bariot_emqx_license:
  bariot_emqx_data:
  bariot_emqx_etc:
  bariot_emqx_log:

services:

  users:
    build: ../users
    image: users_service
    depends_on:
      - users_db
    environment:
      HTTP_PORT: 8080
      PG_HOST: users_db
      PG_PORT: 5432
      PG_DATABASE: ${USERS_DB_NAME}
      PG_USER: ${USERS_DB_USERNAME}
      PG_PASSWORD: ${USERS_DB_PASSWORD}
      PG_CONNECT_TIMEOUT: 5
    ports:
      - 8082:8080

  users_db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - bariot_users_db_data:/var/lib/postgresql/data
      - ./users_db_init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${USERS_DB_NAME}
      POSTGRES_USER: ${USERS_DB_USERNAME}
      POSTGRES_PASSWORD: ${USERS_DB_PASSWORD}

  things:
    build: ../things
    image: things_service
    depends_on:
      - things_db
    environment:
      HTTP_PORT: 8080
      MQTT_HOST: emqx
      MQTT_PORT: 1883
      MQTT_STATUS_PORT: 8081
      PG_HOST: things_db
      PG_PORT: 5432
      PG_DATABASE: ${THINGS_DB_NAME}
      PG_USER: ${THINGS_DB_USERNAME}
      PG_PASSWORD: ${THINGS_DB_PASSWORD}
      PG_CONNECT_TIMEOUT: 5
    ports:
      - 8083:8080

  things_db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - bariot_things_db_data:/var/lib/postgresql/data
      - ./things_db_init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${THINGS_DB_NAME}
      POSTGRES_USER: ${THINGS_DB_USERNAME}
      POSTGRES_PASSWORD: ${THINGS_DB_PASSWORD}
  
  auth:
    build: ../auth
    image: auth_service
    environment:
      RPC_HOST: ${RPC_HOST}
      RPC_PORT: ${RPC_PORT}
      ADMIN_SECRET: ${ADMIN_SECRET}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - 8083:8080




  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # emqx:
  #   image: emqx/emqx:4.3.11
  #   environment:
  #     - "EMQX_NAME=emqx"
  #     - "EMQX_HOST=emqx.broker.io"
  #     - "EMQX_CLUSTER__DISCOVERY=static"
  #     - "EMQX_CLUSTER__STATIC__SEEDS=emqx@emqx.broker.io"
  #     - "EMQX_ZONE__EXTERNAL__RETRY_INTERVAL=2s"
  #     - "EMQX_MQTT__MAX_TOPIC_ALIAS=10"
  #   volumes:
  #     - bariot_emqx_license:/opt/emqx/etc/emqx.lic
  #     - bariot_emqx_data:/opt/emqx/data
  #     - bariot_emqx_etc:/opt/emqx/etc
  #     - bariot_emqx_log:/opt/emqx/log
  #   healthcheck:
  #     test: [ "CMD", "/opt/emqx/bin/emqx_ctl", "status" ]
  #     interval: 5s
  #     timeout: 25s
  #     retries: 5
  #   ports:
  #     - 1883:1883   # MQTT
  #     - 8081:8081   # Health check
  #     - 18083:18083 # Management
